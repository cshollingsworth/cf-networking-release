groups:
- name: cf-networking
  jobs:
  - mysql-tests
  - mysql-5.6-tests
  - postgres-tests
  - windows-tests
  - silk-postgres-tests
  - silk-mysql-tests
  - silk-mysql-5.6-tests
  - unit-and-integration-tests
  - pickelhelm-deploy
  - pickelhelm-test
  - mitre-deploy
  - mitre-test
  - mitre-acceptance-errand
  - mitre-smoke
  - mitre-cats
  - mitre-drats
  - check-empty-networking-opsfile
  - ship-what
  - bump-minor-version
  - ship-cf-networking-and-silk
  - silk-bump-minor-version
  - merge-master
  - silk-merge-master
  - toque-deploy
  - toque-push
  - toque-test
  - sombrero-test-upgrade
- name: pickelhelm
  jobs:
  - pickelhelm-bbl-up
  - pickelhelm-bbl-destroy
  - pickelhelm-deploy
  - pickelhelm-test
  - pickelhelm-deploy-firehose-nozzle
  - delete-pickelhelm-deployment
- name: mitre
  jobs:
  - mitre-bbl-up
  - mitre-bbl-destroy
  - mitre-deploy
  - mitre-test
  - mitre-acceptance-errand
  - mitre-smoke
  - mitre-cats
  - mitre-drats
  - mitre-deploy-firehose-nozzle
  - delete-deployment-mitre-cf
- name: sombrero
  jobs:
  - sombrero-bbl-up
  - sombrero-bbl-destroy
  - sombrero-test-upgrade
  - delete-sombrero-deployment
- name: toque
  jobs:
  - toque-bbl-up
  - toque-bbl-destroy
  - toque-deploy
  - toque-push
  - toque-test
  - toque-deploy-firehose-nozzle
  - delete-toque-deployment
- name: slouch
  jobs:
  - slouch-bbl-up
  - slouch-deploy
  - delete-slouch-deployment
- name: bbl
  jobs:
  - pickelhelm-bbl-up
  - mitre-bbl-up
  - toque-bbl-up
  - sombrero-bbl-up
  - slouch-bbl-up
  - pickelhelm-bbl-destroy
  - mitre-bbl-destroy
  - toque-bbl-destroy
  - sombrero-bbl-destroy
  - slouch-bbl-destroy
- name: cleanup
  jobs:
  - delete-deployment-mitre-cf
  - delete-pickelhelm-deployment
  - delete-toque-deployment
  - delete-sombrero-deployment
  - delete-slouch-deployment
- name: version
  jobs:
  - major-bump
  - minor-bump
  - patch-bump
- name: silk-version
  jobs:
  - silk-major-bump
  - silk-minor-bump
  - silk-patch-bump

resources:
  ###### Control plane
  - name: cf-networking-release-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-networking-release
      branch: develop
      paths:
        - ci
  - name: cf-networking-deployments
    type: git
    source:
      uri: "git@github.com:cloudfoundry/cf-networking-deployments.git"
      branch: master
      private_key: {{cf-networking-deployments-push-key}}
  - name: cats-concourse-task
    type: git
    source:
      uri: https://github.com/cloudfoundry/cats-concourse-task
      branch: master
  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: master
      tag_filter: "v*"
  - name: cf-deployment
    type: git
    source:
      branch: release-candidate
      uri: https://github.com/cloudfoundry/cf-deployment.git
  - name: disaster-recovery-acceptance-tests
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests
  ###### bosh.io releases
  - name: concourse
    type: bosh-io-release
    source:
      repository: concourse/concourse
  - name: datadog-firehose-nozzle-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/datadog-firehose-nozzle-release
  ###### BOSH release repos
  - name: silk-dev
    type: git
    source:
      uri: git@github.com:cloudfoundry/silk-release.git
      branch: develop
      ignore_paths:
        - docs
      private_key: {{silk-release-deploy-key}}
  - name: silk-master
    type: git
    source:
      uri: git@github.com:cloudfoundry/silk-release.git
      branch: master
      private_key: {{silk-release-deploy-key}}
  - name: cf-networking-dev
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: develop
      ignore_paths:
        - docs
        - ci
      private_key: {{cf-networking-deploy-key}}
  - name: cf-networking-master
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: master
      private_key: {{cf-networking-deploy-key}}
  - name: bbr-binary-release
    type: github-release
    source:
      owner: cloudfoundry-incubator
      repository: bosh-backup-and-restore
  ###### Pinned versions
  - name: cf-networking-pinned
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-networking-release.git
      branch: pinned
  - name: cf-deployment-pinned
    type: git
    source:
      branch: pinned
      uri: https://github.com/cf-container-networking/cf-deployment.git
#When we pin 1.4.0, use the correct branch from the cf-networking-release repo, not the ci repo.
  - name: cf-networking-ci-pinned
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-networking-ci
      branch: pinned
      paths:
        - ci
  - name: cf-networking-deployments-pinned
    type: git
    source:
      uri: "git@github.com:cloudfoundry/cf-networking-deployments.git"
      private_key: {{cf-networking-deployments-push-key}}
      branch: pinned
  ####### Stats
  - name: toque-stats
    type: git
    source:
      uri: "git@github.com:cf-container-networking/toque-stats.git"
      branch: master
      private_key: {{container-networking-bot-key}}
  ####### Timers
  - name: every-half-hour
    type: time
    source:
      interval: 30m
  - name: every-fifteen-minutes
    type: time
    source:
      interval: 15m
  ####### Tests
  - name: cf-acceptance-tests
    type: git
    source:
      branch: master
      uri: git://github.com/cloudfoundry/cf-acceptance-tests.git
  - name: toque-scaling-test-params
    type: git
    source:
      uri: https://github.com/cf-container-networking/toque-scaling
      paths: [ test-params ]
  #######  Release management
  - name: version
    type: semver
    source:
      bucket: {{cf-networking-s3-bucket}}
      region_name: us-west-2
      initial_version: 0.2.0-rc.1
      key: releases/current-version
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: cf-networking-tarball
    type: s3
    source:
      bucket: {{cf-networking-candidate-s3-bucket}}
      region_name: us-west-2
      regexp: releases/cf-networking-(.*).tgz
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: silk-version
    type: semver
    source:
      bucket: {{silk-s3-bucket}}
      region_name: us-west-2
      initial_version: 0.1.0-rc.1
      key: releases/current-version
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: silk-tarball
    type: s3
    source:
      bucket: {{silk-candidate-s3-bucket}}
      region_name: us-west-2
      regexp: releases/silk-(.*).tgz
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  # Github release
  # - name: cf-networking-github-release
  #   type: github-release
  #   source:
  #     user: cloudfoundry
  #     repository: cf-networking-release
  #     access_token: {{github-access-token}}
  - name: silk-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: silk-release
      access_token: {{github-access-token}}

jobs:
  - name: sombrero-bbl-up
    serial_groups: [sombrero]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/sombrero/
        BBL_IAAS: gcp
        BBL_LB_CERT: {{sombrero-lb-cert}}
        BBL_LB_KEY: {{sombrero-lb-key}}
        LB_DOMAIN: sombrero.c2c.cf-app.com
        BBL_ENV_NAME: sombrero
      input_mapping:
        env-repo: cf-networking-deployments
        ops-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: sombrero-bbl-destroy
    serial_groups: [sombrero]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        env-repo: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: sombrero-test-upgrade
    serial_groups: [sombrero]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-networking-ci-pinned
      - get: cf-networking-deployments
      - get: cf-networking-deployments-pinned
      - get: cf-deployment
      - get: cf-deployment-pinned
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-pinned
      - get: cf-networking-dev
        passed: [unit-and-integration-tests]
        trigger: true
      - get: silk-dev
        passed: [unit-and-integration-tests]
        trigger: true
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
      input_mapping:
        env-repo: cf-networking-deployments
        cf-deployment-concourse-tasks: cf-deployment-concourse-tasks
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
      input_mapping:
        env-repo: cf-networking-deployments
        cf-deployment: cf-deployment-pinned
        cf-deployment-concourse-tasks: cf-deployment-concourse-tasks
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: sombrero
      input_mapping:
        cf-deployment: cf-deployment-pinned
        cf-networking-release: cf-networking-pinned
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - task: deploy-oldest-compatible-version
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
        OPS_FILES: scale-to-one-az.yml cf-networking.yml opsfile-before.yml
        SYSTEM_DOMAIN: sombrero.c2c.cf-app.com
        VARS_STORE_FILE: environments/sombrero/vars-store.yml
        REGENERATE_VARS_STORE: true
      input_mapping:
        env-repo: cf-networking-deployments
        cf-deployment: cf-deployment-pinned
        cf-deployment-concourse-tasks: cf-deployment-concourse-tasks
        release: cf-networking-pinned
        vars-store: cf-networking-deployments
        vars-files: cf-networking-deployments
    - task: push-app
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: c2cnetworking/deploy-light}
        inputs:
          - name: cf-networking-deployments
          - name: cf-networking-dev
          - name: updated-vars-store
        outputs:
          - name: new-updated-vars-store
        params:
          ENVIRONMENT: sombrero
        run:
          path: /bin/bash
          args:
          - -ceu
          - |
            set -o pipefail
            cf api api.${ENVIRONMENT}.c2c.cf-app.com --skip-ssl-validation
            pushd updated-vars-store/environments/${ENVIRONMENT}
              ADMIN_PASSWORD=$(grep cf_admin_password vars-store.yml  | cut -d ' ' -f2)
            popd
            pushd cf-networking-dev/src/example-apps/proxy
              cf auth admin ${ADMIN_PASSWORD}
              cf create-org push-app-test-org || true
              cf target -o push-app-test-org
              cf create-space push-app-test-space || true
              cf target -s push-app-test-space
              cf push push-app-proxy
              curl -v -f http://push-app-proxy.${ENVIRONMENT}.c2c.cf-app.com
            popd
            mv updated-vars-store/* new-updated-vars-store
    - task: acceptance-tests
      file: cf-networking-ci-pinned/tasks/acceptance-tests.yml
      input_mapping:
        cf-networking: cf-networking-pinned
        cf-networking-ci: cf-networking-ci-pinned
        test-config: cf-networking-deployments-pinned
        vars-store: new-updated-vars-store
      params:
        ENVIRONMENT_NAME: sombrero
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: sombrero
      input_mapping:
        cf-networking-release: cf-networking-dev
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: upload-local-silk-release
      file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
      input_mapping:
        env-repo: cf-networking-deployments
        local-release: silk-dev
      params:
        BBL_STATE_DIR: environments/sombrero/
    - task: deploy-upgrade
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
        OPS_FILES: use-compiled-releases.yml scale-to-one-az.yml cf-networking.yml use-silk-release.yml opsfile-after.yml
        SYSTEM_DOMAIN: sombrero.c2c.cf-app.com
        VARS_STORE_FILE: environments/sombrero/vars-store.yml
      input_mapping:
        release: cf-networking-dev
        vars-store: updated-vars-store
        vars-files: updated-vars-store
        env-repo: cf-networking-deployments
    - task: curl-app
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: c2cnetworking/deploy-light}
        inputs:
          - name: updated-vars-store
        outputs:
          - name: new-updated-vars-store
        params:
          ENVIRONMENT: sombrero
        run:
          path: /bin/bash
          args:
          - -ceu
          - |
            set -o pipefail
            curl -f -v http://push-app-proxy.${ENVIRONMENT}.c2c.cf-app.com
            mv updated-vars-store/* new-updated-vars-store
    - task: acceptance-tests
      file: cf-networking-release-ci/ci/tasks/acceptance-tests.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        vars-store: new-updated-vars-store
      params:
        ENVIRONMENT_NAME: sombrero
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
      input_mapping:
        env-repo: cf-networking-deployments
        cf-networking-release: cf-networking-dev
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
        CLEAN_ALL: false
      input_mapping:
        env-repo: cf-networking-deployments

  - name: delete-sombrero-deployment
    serial_groups:
    - sombrero
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-dev
        passed:
        - sombrero-test-upgrade
        trigger: true
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/sombrero/
      input_mapping:
        env-repo: cf-networking-deployments
        cf-networking-release: cf-networking-dev

  - name: postgres-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/tasks/postgres-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-dev

  - name: mysql-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/tasks/mysql-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-dev

  - name: mysql-5.6-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/tasks/mysql-5.6-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-dev

  - name: windows-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-dev
        trigger: true
      - get: cf-networking-release-ci
    - task: garden-external-networker-windows
      file: cf-networking-release-ci/ci/tasks/garden-external-networker-windows.yml
      input_mapping:
        cf-networking-release: cf-networking-dev
        ci: cf-networking-release-ci

  - name: silk-postgres-tests
    public: true
    plan:
    - aggregate:
      - get: silk-dev
        trigger: true
    - task: test-postgres
      file: silk-dev/ci/test-postgres.yml
      privileged: true
      input_mapping:
        silk: silk-dev

  - name: silk-mysql-tests
    public: true
    plan:
    - aggregate:
      - get: silk-dev
        trigger: true
    - task: test-mysql
      file: silk-dev/ci/test-mysql.yml
      privileged: true
      input_mapping:
        silk: silk-dev

  - name: silk-mysql-5.6-tests
    public: true
    plan:
    - aggregate:
      - get: silk-dev
        trigger: true
    - task: test-mysql-5.6
      file: silk-dev/ci/test-mysql-5.6.yml
      privileged: true
      input_mapping:
        silk: silk-dev

  - name: unit-and-integration-tests
    public: true
    plan:
    - get: cf-networking-dev
      passed: [postgres-tests, mysql-tests, mysql-5.6-tests, windows-tests]
      trigger: true
    - get: silk-dev
      passed: [silk-postgres-tests, silk-mysql-tests, silk-mysql-5.6-tests]
      trigger: true

  - name: pickelhelm-bbl-up
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/pickelhelm/
        BBL_IAAS: gcp
        BBL_LB_CERT: {{pickelhelm-lb-cert}}
        BBL_LB_KEY: {{pickelhelm-lb-key}}
        LB_DOMAIN: pickelhelm.c2c.cf-app.com
        BBL_ENV_NAME: pickelhelm
      input_mapping:
        env-repo: cf-networking-deployments
        ops-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: pickelhelm-bbl-destroy
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        env-repo: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: pickelhelm-deploy
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment
        trigger: true
      - get: cf-networking-dev
        trigger: true
        passed: [unit-and-integration-tests]
      - get: silk-dev
        trigger: true
        passed: [unit-and-integration-tests]
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: pickelhelm
      input_mapping:
        cf-networking-release: cf-networking-dev
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - task: upload-local-silk-release
      file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
      input_mapping:
        env-repo: cf-networking-deployments
        local-release: silk-dev
      params:
        BBL_STATE_DIR: environments/pickelhelm/
    - task: upload-acceptance-test-release
      file: cf-networking-release-ci/ci/tasks/upload-acceptance-test-release.yml
      params:
        ENVIRONMENT_NAME: pickelhelm
      input_mapping:
        env-repo: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/pickelhelm/
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
        SYSTEM_DOMAIN: pickelhelm.c2c.cf-app.com
        OPS_FILES: use-compiled-releases.yml datadog.yml scale-to-one-az.yml smaller-footprint.yml cf-networking.yml use-system-domain-as-metron-deployment-name.yml use-silk-release.yml add-acceptance-test-jobs.yml opsfile.yml
        VARS_STORE_FILE: environments/pickelhelm/vars-store.yml
      input_mapping:
        env-repo: cf-networking-deployments
        release: cf-networking-dev
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-vars-store
          rebase: true
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
      input_mapping:
        env-repo: cf-networking-deployments

  - name: pickelhelm-deploy-firehose-nozzle
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
        passed: [pickelhelm-deploy]
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-networking-release-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: pickelhelm
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        env-repo: cf-networking-deployments
        cf-deployment: cf-networking-deployments
        ops-files: cf-networking-deployments
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/pickelhelm
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: pickelhelm.c2c.cf-app.com
        VARS_STORE_FILE: environments/pickelhelm/vars-store.yml


  - name: pickelhelm-test
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
        passed: [pickelhelm-deploy]
      - get: cf-deployment
        passed: [pickelhelm-deploy]
        trigger: true
      - get: cf-networking-dev
        passed: [pickelhelm-deploy]
        trigger: true
      - get: silk-dev
        passed: [pickelhelm-deploy]
        trigger: true
    - task: acceptance-tests
      file: cf-networking-release-ci/ci/tasks/acceptance-tests.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: pickelhelm

  - name: mitre-bbl-up
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/mitre/
        BBL_IAAS: gcp
        BBL_LB_CERT: {{mitre-lb-cert}}
        BBL_LB_KEY: {{mitre-lb-key}}
        LB_DOMAIN: mitre.c2c.cf-app.com
        BBL_ENV_NAME: mitre
      input_mapping:
        env-repo: cf-networking-deployments
        ops-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: mitre-bbl-destroy
    serial_groups: [mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        env-repo: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: mitre-deploy
    serial_groups: [mitre-deploy-group, version]
    plan:
    - aggregate:
      - get: concourse
      - get: cf-networking-release-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment
        passed: [pickelhelm-test]
        trigger: true
      - get: cf-networking-dev
        trigger: true
        passed: [pickelhelm-test]
      - get: silk-dev
        trigger: true
        passed: [pickelhelm-test]
      - get: version
        params:
          pre: rc
      - get: silk-version
        params:
          pre: rc
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: update-runtime-config
      file: cf-networking-release-ci/ci/tasks/update-runtime-config.yml
      input_mapping:
        env-repo: cf-networking-deployments
        cf-networking-ci: cf-networking-release-ci
        runtime-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre/
        VARS_STORE_FILE: environments/mitre/vars-store.yml
        RUNTIME_CONFIG_FILE: syslog-addon.yml
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: mitre
      input_mapping:
        cf-networking-release: cf-networking-dev
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - task: upload-local-silk-release
      file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
      input_mapping:
        env-repo: cf-networking-deployments
        local-release: silk-dev
      params:
        BBL_STATE_DIR: environments/mitre/
    - task: upload-acceptance-test-release
      file: cf-networking-release-ci/ci/tasks/upload-acceptance-test-release.yml
      params:
        ENVIRONMENT_NAME: mitre
      input_mapping:
        env-repo: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre/
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
        SYSTEM_DOMAIN: mitre.c2c.cf-app.com
        OPS_FILES: enable-iptables-logger.yml use-compiled-releases.yml datadog.yml custom-apps-domain.yml scale-to-one-az.yml smaller-footprint.yml cf-networking.yml use-system-domain-as-metron-deployment-name.yml use-silk-release.yml enable-iptables-logger-silk.yml add-acceptance-test-jobs.yml opsfile.yml
        VARS_STORE_FILE: environments/mitre/vars-store.yml
      input_mapping:
        env-repo: cf-networking-deployments
        vars-store: cf-networking-deployments
        vars-files: cf-networking-deployments
        release: cf-networking-dev
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-vars-store
          rebase: true
    - task: upload-concourse-release
      file: cf-networking-release-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: concourse
      params:
        ENVIRONMENT_NAME: mitre
    - task: create-release-tarball
      file: cf-networking-release-ci/ci/tasks/create-release-tarball.yml
      input_mapping:
        my-release: cf-networking-dev
      params:
        RELEASE_NAME: cf-networking
        VERSION_NAME: version
    - put: cf-networking-tarball
      params:
        file: tarballs/cf-networking-*.tgz
    - task: create-silk-release-tarball
      file: cf-networking-release-ci/ci/tasks/create-release-tarball.yml
      input_mapping:
        my-release: silk-dev
      params:
        RELEASE_NAME: silk
        VERSION_NAME: silk-version
    - put: silk-tarball
      params:
        file: tarballs/silk-*.tgz
    - put: version
      params: {file: version/number}
    - put: silk-version
      params: {file: silk-version/number}
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
      input_mapping:
        env-repo: cf-networking-deployments

  - name: mitre-test
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
        passed: [mitre-deploy]
      - get: cf-networking-dev
        passed: [mitre-deploy]
        trigger: true
      - get: cf-networking-tarball
        passed: [mitre-deploy]
      - get: version
        passed: [mitre-deploy]
      - get: cf-networking-release-ci
      - get: cf-deployment
        passed: [mitre-deploy]
        trigger: true
      - get: silk-dev
        passed: [mitre-deploy]
        trigger: true
      - get: silk-tarball
        passed: [mitre-deploy]
      - get: silk-version
        passed: [mitre-deploy]
    - task: acceptance-tests
      file: cf-networking-release-ci/ci/tasks/acceptance-tests.yml
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: mitre

  - name: mitre-deploy-firehose-nozzle
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
        passed: [mitre-deploy]
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-networking-release-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: mitre
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        cf-deployment: cf-networking-deployments
        vars-store: cf-networking-deployments
        env-repo: cf-networking-deployments
        vars-files: cf-networking-deployments
        ops-files: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/mitre
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: mitre.c2c.cf-app.com
        VARS_STORE_FILE: environments/mitre/vars-store.yml

  - name: mitre-acceptance-errand
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-networking-dev
        passed: [mitre-test]
      - get: cf-networking-deployments
      - get: cf-networking-tarball
        passed: [mitre-test]
        trigger: true
      - get: silk-dev
        passed: [mitre-test]
      - get: silk-tarball
        passed: [mitre-test]
        trigger: true
    - task: run-errand
      file: cf-networking-release-ci/ci/tasks/run-errand.yml
      params:
        ENVIRONMENT_NAME: mitre
        ERRAND: cf-networking-acceptance
      input_mapping:
        deployments-repo: cf-networking-deployments

  - name: mitre-smoke
    serial_groups: [mitre-test-group]
    plan:
    - aggregate:
      - get: every-fifteen-minutes
        trigger: true
      - get: cf-networking-deployments
      - get: cf-networking-dev
        passed: [mitre-test]
        trigger: true
      - get: cf-networking-release-ci
      - get: cf-deployment
        passed: [mitre-test]
        trigger: true
      - get: silk-dev
        passed: [mitre-test]
        trigger: true
    - task: smoke-tests
      file: cf-networking-release-ci/ci/tasks/smoke-tests.yml
      params:
        ENVIRONMENT_NAME: mitre
        ENVIRONMENT_TAG: mitre.c2c.cf-app.com
        DATADOG_API_KEY: {{datadog_api_key}}
      input_mapping:
        test-config: cf-networking-deployments
        cf-networking: cf-networking-dev

  - name: mitre-cats
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-acceptance-tests
      - get: cats-concourse-task
      - get: cf-networking-dev
        passed: [mitre-test]
        trigger: true
      - get: cf-deployment
        passed: [mitre-test]
        trigger: true
      - get: cf-networking-deployments
      - get: cf-networking-tarball
        passed: [mitre-test]
      - get: silk-dev
        passed: [mitre-test]
        trigger: true
      - get: silk-tarball
        passed: [mitre-test]
      - get: version
        passed: [mitre-test]
      - get: silk-version
        passed: [mitre-test]
    - task: copy-config
      file: cf-networking-release-ci/ci/tasks/copy-config.yml
      params:
        ENVIRONMENT: mitre
    - task: cats
      file: cats-concourse-task/task.yml
      params:
        NODES: 8

  - name: mitre-drats
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-networking-dev
        passed: [mitre-cats]
        trigger: true
      - get: cf-deployment
        passed: [mitre-cats]
        trigger: true
      - get: cf-networking-deployments
      - get: cf-networking-tarball
        passed: [mitre-cats]
      - get: version
        passed: [mitre-cats]
      - get: disaster-recovery-acceptance-tests
      - get: bbr-binary-release
      - get: silk-dev
        passed: [mitre-cats]
        trigger: true
      - get: silk-tarball
        passed: [mitre-cats]
      - get: silk-version
        passed: [mitre-cats]
    - task: create-drats-config
      file: cf-networking-release-ci/ci/tasks/create-drats-config.yml
      input_mapping:
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: mitre
    - task: run-drats
      privileged: true
      file: disaster-recovery-acceptance-tests/ci/drats-with-integration-config/task.yml

  - name: toque-bbl-up
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/toque/
        BBL_IAAS: gcp
        BBL_LB_CERT: {{toque-lb-cert}}
        BBL_LB_KEY: {{toque-lb-key}}
        LB_DOMAIN: toque.c2c.cf-app.com
        BBL_ENV_NAME: toque
      input_mapping:
        env-repo: cf-networking-deployments
        ops-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: toque-bbl-destroy
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        env-repo: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: toque-deploy
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
      - get: cf-networking-dev
        passed: [unit-and-integration-tests]
        trigger: true
      - get: silk-dev
        passed: [unit-and-integration-tests]
        trigger: true
      - get: datadog-firehose-nozzle-release
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        env-repo: cf-networking-deployments
        cf-deployment: cf-deployment
      params:
        BBL_STATE_DIR: environments/toque
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        deployments-repo: cf-networking-deployments
        cf-networking-release: cf-networking-dev
        silk-release: silk-dev
    - task: upload-local-silk-release
      file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
      input_mapping:
        env-repo: cf-networking-deployments
        local-release: silk-dev
      params:
        BBL_STATE_DIR: environments/toque/
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/toque
        SYSTEM_DOMAIN: toque.c2c.cf-app.com
        OPS_FILES: use-compiled-releases.yml datadog.yml scale-to-one-az.yml smaller-footprint.yml cf-networking.yml use-silk-release.yml use-system-domain-as-metron-deployment-name.yml opsfile.yml
        VARS_STORE_FILE: environments/toque/vars-store.yml
      input_mapping:
        env-repo: cf-networking-deployments
        cf-deployment: cf-deployment
        release: cf-networking-dev
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-vars-store
          rebase: true
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
      input_mapping:
        env-repo: cf-networking-deployments

  - name: toque-deploy-firehose-nozzle
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
        passed: [toque-deploy]
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-networking-release-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: toque
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        cf-deployment: cf-networking-deployments
        vars-store: cf-networking-deployments
        env-repo: cf-networking-deployments
        vars-files: cf-networking-deployments
        ops-files: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/toque
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: toque.c2c.cf-app.com
        VARS_STORE_FILE: environments/toque/vars-store.yml

  - name: toque-push
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
        passed: [toque-deploy]
      - get: cf-networking-dev
        passed: [toque-deploy]
        trigger: true
      - get: toque-scaling-test-params
        trigger: true
    - task: set-scaling-test-params
      file: cf-networking-release-ci/ci/tasks/set-scaling-test-params.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        deployments-repo: cf-networking-deployments
        scaling-test-params: toque-scaling-test-params
    - task: push-apps
      file: cf-networking-release-ci/ci/tasks/push-apps.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: test-config

  - name: toque-test
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: every-half-hour
        trigger: true
      - get: cf-networking-dev
        passed: [toque-push]
      - get: cf-networking-release-ci
      - get: toque-scaling-test-params
        passed: [toque-push]
      - get: toque-stats
      - get: cf-networking-deployments
        passed: [toque-push]
    - task: set-scaling-test-params
      file: cf-networking-release-ci/ci/tasks/set-scaling-test-params.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        deployments-repo: cf-networking-deployments
        scaling-test-params: toque-scaling-test-params
    - task: emit-datadog-test-start
      file: cf-networking-release-ci/ci/tasks/emit-datadog-event.yml
      params:
        TITLE: test_start
        TEXT: test_start
        PRIORITY: normal
        AWS_ENV: toque.c2c.cf-app.com
        DATADOG_API_KEY: {{datadog_api_key}}
    - task: test-scalability
      file: cf-networking-release-ci/ci/tasks/test-scalability.yml
      params:
        ENVIRONMENT_NAME: toque
      input_mapping:
        cf-networking: cf-networking-dev
        test-config: test-config
      ensure:
        task: emit-datadog-test-stop
        file: cf-networking-release-ci/ci/tasks/emit-datadog-event.yml
        params:
          TITLE: test_end
          TEXT: test_end
          PRIORITY: normal
          AWS_ENV: toque.c2c.cf-app.com
          DATADOG_API_KEY: {{datadog_api_key}}

  - name: slouch-bbl-up
    serial_groups: [slouch]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        trigger: true
      - get: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        BBL_GCP_REGION: us-east1
        BBL_STATE_DIR: environments/slouch/
        BBL_IAAS: gcp
        BBL_LB_CERT: {{slouch-lb-cert}}
        BBL_LB_KEY: {{slouch-lb-key}}
        LB_DOMAIN: slouch.c2c.cf-app.com
        BBL_ENV_NAME: slouch
      input_mapping:
        env-repo: cf-networking-deployments
        ops-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: slouch-bbl-destroy
    serial_groups: [slouch]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/slouch/
      input_mapping:
        env-repo: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/slouch/
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
      input_mapping:
        env-repo: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-env-repo
          rebase: true

  - name: slouch-deploy
    serial_groups: [slouch]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
      - get: cf-networking-dev
        passed:
        - unit-and-integration-tests
      - get: silk-dev
        passed: [unit-and-integration-tests]
      - get: datadog-firehose-nozzle-release
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        env-repo: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/slouch
    - task: upload-acceptance-test-release
      file: cf-networking-release-ci/ci/tasks/upload-acceptance-test-release.yml
      params:
        ENVIRONMENT_NAME: slouch
      input_mapping:
        env-repo: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/slouch/
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: slouch
      input_mapping:
        cf-networking-release: cf-networking-dev
        deployments-repo: cf-networking-deployments
        silk-release: silk-dev
    - task: upload-local-silk-release
      file: cf-networking-release-ci/ci/tasks/upload-local-release.yml
      input_mapping:
        env-repo: cf-networking-deployments
        local-release: silk-dev
      params:
        BBL_STATE_DIR: environments/slouch/
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/slouch
        SYSTEM_DOMAIN: slouch.c2c.cf-app.com
        OPS_FILES: use-compiled-releases.yml scale-to-one-az.yml smaller-footprint.yml cf-networking.yml use-silk-release.yml add-acceptance-test-jobs.yml opsfile.yml
        VARS_STORE_FILE: environments/slouch/vars-store.yml
      input_mapping:
        env-repo: cf-networking-deployments
        release: cf-networking-dev
        vars-store: cf-networking-deployments
        vars-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-vars-store
          rebase: true
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/slouch/
      input_mapping:
        env-repo: cf-networking-deployments

  - name: delete-slouch-deployment
    public: true
    serial_groups: [slouch]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/slouch/
      input_mapping:
        env-repo: cf-networking-deployments

##### Human-triggered utilities

  - name: delete-pickelhelm-deployment
    public: true
    serial_groups: [pickelhelm]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/pickelhelm/
        DEPLOYMENT_NAME: cf
      input_mapping:
        env-repo: cf-networking-deployments

  - name: delete-deployment-mitre-cf
    public: true
    serial_groups: [mitre-test-group, mitre-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/mitre/
        DEPLOYMENT_NAME: cf
      input_mapping:
        env-repo: cf-networking-deployments

  - name: delete-toque-deployment
    public: true
    serial_groups: [toque]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/toque/
        DEPLOYMENT_NAME: cf
      input_mapping:
        env-repo: cf-networking-deployments

  - name: ship-what
    serial_groups: [version, silk-version]
    plan:
    - do:
      - aggregate:
        - get: version
          passed: [mitre-drats]
        - get: silk-version
          passed: [mitre-drats]
        - get: cf-networking-dev
          params:
            submodules: none
          passed: [mitre-drats, sombrero-test-upgrade, mitre-acceptance-errand, mitre-smoke]
          trigger: true
        - get: silk-dev
          params:
            submodules: none
          passed: [mitre-drats, sombrero-test-upgrade, mitre-acceptance-errand, mitre-smoke]
          trigger: true
        - get: cf-deployment
          passed: [mitre-drats]
        - get: cf-networking-tarball
          passed: [mitre-drats, mitre-acceptance-errand]
        - get: silk-tarball
          passed: [mitre-drats, mitre-acceptance-errand]

  - name: check-empty-networking-opsfile
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: cf-networking-release-ci
        - get: version
          passed: [mitre-drats]
        - get: cf-networking-dev
          params:
            submodules: none
          passed: [mitre-drats, sombrero-test-upgrade, mitre-acceptance-errand, mitre-smoke]
          trigger: true
      - task: check-empty-networking-opsfile
        file: cf-networking-release-ci/ci/tasks/check-empty-networking-opsfile.yml
        input_mapping:
          cf-networking: cf-networking-dev

  - name: ship-cf-networking-and-silk
    serial_groups: [version, silk-version]
    plan:
    - do:
      - aggregate:
        - get: cf-networking-deployments
        - get: cf-networking-release-ci
        - get: cf-networking-master
        - get: silk-master
        - get: version
          params:
            bump: final
          passed: [ship-what]
        - get: silk-version
          params:
            bump: final
          passed: [ship-what]
        - get: cf-networking-dev
          params:
            submodules: none
          passed: [ship-what]
        - get: silk-dev
          params:
            submodules: none
          passed: [ship-what]
        - get: cf-deployment
          passed: [ship-what]
        - get: cf-networking-tarball
          passed: [ship-what]
        - get: silk-tarball
          passed: [ship-what]
      # - task: shipit
      #   file: cf-networking-release-ci/ci/tasks/shipit.yml
      #   input_mapping:
      #     cf-networking: cf-networking-dev
      # - put: version
      #   params: {file: version/number}
      # - put: cf-networking-master
      #   params:
      #     repository: release/master
      #     tag: version/number
      #     tag_prefix: v
      # - put: cf-networking-tarball
      #   params:
      #     file: final-release/cf-networking-*.tgz
      # - task: build-release-notes
      #   file: cf-networking-release-ci/ci/tasks/build-release-notes.yml
      #   input_mapping:
      #     master-release: cf-networking-master
      #     other-release-version: silk-version
      #   params:
      #     OTHER_RELEASE_NAME: silk-release
      # - put: cf-networking-github-release
      #   params:
      #     name: version/number
      #     tag: version/number
      #     body: release-notes/notes.md
      #     tag_prefix: v
      #     globs:
      #     - final-release/cf-networking-*.tgz
      - task: silk-shipit
        file: cf-networking-release-ci/ci/tasks/silk-shipit.yml
        input_mapping:
          silk: silk-dev
   #   - put: silk-version
    #    params: {file: silk-version/number}
     # - put: silk-master
      #  params:
       #   repository: release/master
        #  tag: silk-version/number
         # tag_prefix: v
 #     - put: silk-tarball
  #      params:
   #       file: final-release/silk-*.tgz
      - task: silk-build-release-notes
        file: cf-networking-release-ci/ci/tasks/build-release-notes.yml
        input_mapping:
          master-release: silk-master
          other-release-version: version
        params:
          OTHER_RELEASE_NAME: cf-networking-release
      - put: silk-github-release
        params:
          name: silk-version/number
          tag: silk-version/number
          body: release-notes/notes.md
          tag_prefix: v
          globs:
          - final-release/silk-*.tgz

  # bump minor version (i.e. 0.1.0 -> 0.2.0)
  - name: bump-minor-version
    serial_groups: [version]
    plan:
    - aggregate:
      - get: version
        trigger: true
        passed: [ship-cf-networking-and-silk]
        params: {bump: minor, pre: rc}
    - put: version
      params: {file: version/number}

  # merge master back to develop
  - name: merge-master
    plan:
    - do:
      - aggregate:
        - get: cf-networking-release-ci
        - get: cf-networking-master
          params:
            submodules: none
          passed: [ship-cf-networking-and-silk]
          trigger: true
        - get: cf-networking-dev
          params: {submodules: none}
      - task: merge-master
        file: cf-networking-release-ci/ci/tasks/merge-master.yml
      - put: cf-networking-dev
        params: {repository: release-merged}

  # versioning
  - name: patch-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: patch}
    - put: version
      params: {file: version/number}

  - name: minor-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: minor}
    - put: version
      params: {file: version/number}

  - name: major-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: major}
    - put: version
      params: {file: version/number}

  # bump silk minor version (i.e. 0.1.0 -> 0.2.0)
  - name: silk-bump-minor-version
    serial_groups: [silk-version]
    plan:
    - aggregate:
      - get: silk-version
        trigger: true
        passed: [ship-cf-networking-and-silk]
        params: {bump: minor, pre: rc}
    - put: silk-version
      params: {file: silk-version/number}

  # merge silk-master back to silk-develop
  - name: silk-merge-master
    plan:
    - do:
      - aggregate:
        - get: cf-networking-release-ci
        - get: silk-master
          params:
            submodules: none
          passed: [ship-cf-networking-and-silk]
          trigger: true
        - get: silk-dev
          params: {submodules: none}
      - task: silk-merge-master
        file: cf-networking-release-ci/ci/tasks/silk-merge-master.yml
      - put: silk-dev
        params: {repository: release-merged}

  # silk versioning
  - name: silk-patch-bump
    serial_groups: [silk-version]
    plan:
    - get: silk-version
      params: {bump: patch}
    - put: silk-version
      params: {file: silk-version/number}

  - name: silk-minor-bump
    serial_groups: [silk-version]
    plan:
    - get: silk-version
      params: {bump: minor}
    - put: silk-version
      params: {file: silk-version/number}

  - name: silk-major-bump
    serial_groups: [silk-version]
    plan:
    - get: silk-version
      params: {bump: major}
    - put: silk-version
      params: {file: silk-version/number}
